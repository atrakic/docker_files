---
# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'codelab-monitor'

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  - "prometheus.rules"
  # - "second.rules"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']

## 
#  - job_name:  'example-random'
#    scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
#  
#    static_configs:
#     - targets: ['localhost:8081', 'localhost:8082']
#       labels:
#         group: 'demo'

#     - targets: ['localhost:8083']
#       labels:
#         group: 'canary'
###     

### DockerLinux
global:
  scrape_interval: 5s
  
  external_labels:
      monitor: 'local-monitor'

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  - job_name: 'DockerLinuxLocal'

#docker run -it --pid=host --privileged debian:jessie nsenter -t 1 -m -p -n ip a show docker0  
    static_configs:
      - targets: ['172.17.0.1:9999']
###
